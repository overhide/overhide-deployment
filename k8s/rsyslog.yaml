apiVersion: apps/v1
kind: Deployment
metadata:
  name: rsyslog-server
  labels:
    app: rsyslog-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rsyslog-server
  template:
    metadata:
      labels:
        app: rsyslog-server
    spec:
      initContainers:
      - name: rsyslog-init
        image: busybox
        command: ["sh", "-c"]
        args:
        - mkdir -p /var/log/old.dir;
        volumeMounts:
        - mountPath: "/var/log"
          name: log-files-volume
        resources:
          limits:
            memory: "64Mi"
      containers:
      - name: rsyslog-server
        image: jumanjiman/rsyslog:latest
        ports:
        - containerPort: 514
          name: tcp
          protocol: TCP
        - containerPort: 514
          name: upd
          protocol: UDP
        volumeMounts:
        - name: config-volume
          mountPath: /etc/rsyslog.d
        - mountPath: "/var/log"
          name: log-files-volume
        resources:
          limits:
            memory: "64Mi"
      - name: logrotate-rsyslog
        image: blacklabelops/logrotate
        securityContext:
          privileged: true
        volumeMounts:
        - name: log-files-volume
          mountPath: "/var/log"          
        env:
        - name: LOGS_DIRECTORIES
          value: "/var/log"
        - name: LOGROTATE_INTERVAL
          value: "daily"
        - name: LOGROTATE_COPIES
          value: "10"
        - name: LOGROTATE_OLDDIR
          value: "/var/log/old.logs"
        resources:
          limits:
            memory: "64Mi"
      volumes:
      - name: config-volume
        configMap:
          name: rsyslog-d
      - name: log-files-volume
        persistentVolumeClaim:
          claimName: rsyslog-pvc

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: rsyslog-d
  labels:
    app: rsyslog-server
data:
  filelog.conf: |
    # http://www.rsyslog.com/doc/
    # Output
    $template DynaFile,"/var/log/log"
    # Actions
    *.* -?DynaFile              # one file for every device
  imtcp.conf: |
    module(load="imtcp")
    input(type="imtcp" port="514")
  imudp.conf: |
    module(load="imudp")
    input(type="imudp" port="514")

---
  
apiVersion: v1
kind: Service
metadata:
  name: rsyslog-server-service
  labels:
    app: rsyslog-server
spec:
  ports:
  - name: upd
    port: 514
    protocol: UDP
  selector:
    app: rsyslog-server
  type: NodePort  

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rsyslog-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: default

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: logrotate
spec:
  selector:
    matchLabels:
      name: logrotate
  template:
    metadata:
      labels:
        app: logging
        id: logrotate
        name: logrotate
    spec:
      containers:
      - name: logrotate-es
        image: blacklabelops/logrotate
        securityContext:
          privileged: true
        volumeMounts:
         - name: containers
           mountPath: /var/lib/docker/containers
         - name: varlog
           mountPath: /var/log/docker
         - name: logs
           mountPath: /logs
        env:
        - name: LOGS_DIRECTORIES
          value: "/var/lib/docker/containers /var/log/docker"
        - name: LOGROTATE_INTERVAL
          value: "hourly"
        - name: LOGROTATE_OLDDIR
          value: "/old.logs"
        resources:
          limits:
            memory: "64Mi"
      volumes:
         - hostPath:
             path: /var/lib/docker/containers
           name: containers
         - hostPath:
             path: /var/log/docker
           name: varlog
         - hostPath:
             path: /var/log/containers/
           name: logs
  